// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chart.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Sources list
type Sources struct {
	// Charts list
	// @inject_tag: bson:"sources" json:"sources"
	Source               []*Source `protobuf:"bytes,1,rep,name=source,proto3" json:"sources" bson:"sources"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Sources) Reset()         { *m = Sources{} }
func (m *Sources) String() string { return proto.CompactTextString(m) }
func (*Sources) ProtoMessage()    {}
func (*Sources) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{0}
}

func (m *Sources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sources.Unmarshal(m, b)
}
func (m *Sources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sources.Marshal(b, m, deterministic)
}
func (m *Sources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sources.Merge(m, src)
}
func (m *Sources) XXX_Size() int {
	return xxx_messageInfo_Sources.Size(m)
}
func (m *Sources) XXX_DiscardUnknown() {
	xxx_messageInfo_Sources.DiscardUnknown(m)
}

var xxx_messageInfo_Sources proto.InternalMessageInfo

func (m *Sources) GetSource() []*Source {
	if m != nil {
		return m.Source
	}
	return nil
}

// Source struct for service
type Source struct {
	// unique ID gen by client
	// @inject_tag: bson:"unique" json:"unique"
	Unique string `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique" bson:"unique"`
	// Name of data
	// @inject_tag: bson:"name" json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name"`
	// Address
	// @inject_tag: bson:"address" json:"address"
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address" bson:"address"`
	// User
	// @inject_tag: bson:"user" json:"user"
	User string `protobuf:"bytes,4,opt,name=user,proto3" json:"user" bson:"user"`
	// Password
	// @inject_tag: bson:"password" json:"password"
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password" bson:"password"`
	// Database
	// @inject_tag: bson:"database" json:"database"
	Database string `protobuf:"bytes,6,opt,name=database,proto3" json:"database" bson:"database"`
	// Collection
	// @inject_tag: bson:"collection" json:"collection"
	Collection string `protobuf:"bytes,7,opt,name=collection,proto3" json:"collection" bson:"collection"`
	// Created
	// @inject_tag: bson:"created" json:"created"
	Created string `protobuf:"bytes,8,opt,name=created,proto3" json:"created" bson:"created"`
	// Modified
	// @inject_tag: bson:"modified" json:"modified"
	Modified string `protobuf:"bytes,9,opt,name=modified,proto3" json:"modified" bson:"modified"`
	// Version
	// @inject_tag: bson:"version" json:"version"
	Version int64 `protobuf:"varint,10,opt,name=version,proto3" json:"version" bson:"version"`
	// Versions
	// @inject_tag: bson:"versions" json:"versions"
	Versions             string   `protobuf:"bytes,11,opt,name=versions,proto3" json:"versions" bson:"versions"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{1}
}

func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

func (m *Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Source) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Source) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Source) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Source) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *Source) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *Source) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Source) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Source) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Source) GetVersions() string {
	if m != nil {
		return m.Versions
	}
	return ""
}

// CreateSourceRequest
// receive data from client
type CreateSourceRequest struct {
	Data                 *Source  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSourceRequest) Reset()         { *m = CreateSourceRequest{} }
func (m *CreateSourceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSourceRequest) ProtoMessage()    {}
func (*CreateSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{2}
}

func (m *CreateSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSourceRequest.Unmarshal(m, b)
}
func (m *CreateSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSourceRequest.Marshal(b, m, deterministic)
}
func (m *CreateSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSourceRequest.Merge(m, src)
}
func (m *CreateSourceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSourceRequest.Size(m)
}
func (m *CreateSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSourceRequest proto.InternalMessageInfo

func (m *CreateSourceRequest) GetData() *Source {
	if m != nil {
		return m.Data
	}
	return nil
}

// CreateSourceResponse
// return ID for new created data
type CreateSourceResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSourceResponse) Reset()         { *m = CreateSourceResponse{} }
func (m *CreateSourceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSourceResponse) ProtoMessage()    {}
func (*CreateSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{3}
}

func (m *CreateSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSourceResponse.Unmarshal(m, b)
}
func (m *CreateSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSourceResponse.Marshal(b, m, deterministic)
}
func (m *CreateSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSourceResponse.Merge(m, src)
}
func (m *CreateSourceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSourceResponse.Size(m)
}
func (m *CreateSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSourceResponse proto.InternalMessageInfo

func (m *CreateSourceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// ReadSourceRequest
// receive unique in GET request
type ReadSourceRequest struct {
	Unique               string   `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadSourceRequest) Reset()         { *m = ReadSourceRequest{} }
func (m *ReadSourceRequest) String() string { return proto.CompactTextString(m) }
func (*ReadSourceRequest) ProtoMessage()    {}
func (*ReadSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{4}
}

func (m *ReadSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSourceRequest.Unmarshal(m, b)
}
func (m *ReadSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSourceRequest.Marshal(b, m, deterministic)
}
func (m *ReadSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSourceRequest.Merge(m, src)
}
func (m *ReadSourceRequest) XXX_Size() int {
	return xxx_messageInfo_ReadSourceRequest.Size(m)
}
func (m *ReadSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSourceRequest proto.InternalMessageInfo

func (m *ReadSourceRequest) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

// ReadSourceResponse
// retrive data by unique
// return NOT_FOUND if failed
type ReadSourceResponse struct {
	Data                 *Source  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadSourceResponse) Reset()         { *m = ReadSourceResponse{} }
func (m *ReadSourceResponse) String() string { return proto.CompactTextString(m) }
func (*ReadSourceResponse) ProtoMessage()    {}
func (*ReadSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{5}
}

func (m *ReadSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSourceResponse.Unmarshal(m, b)
}
func (m *ReadSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSourceResponse.Marshal(b, m, deterministic)
}
func (m *ReadSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSourceResponse.Merge(m, src)
}
func (m *ReadSourceResponse) XXX_Size() int {
	return xxx_messageInfo_ReadSourceResponse.Size(m)
}
func (m *ReadSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSourceResponse proto.InternalMessageInfo

func (m *ReadSourceResponse) GetData() *Source {
	if m != nil {
		return m.Data
	}
	return nil
}

// UpdateSourceRequest
// receive data with Unique to update certain object
type UpdateSourceRequest struct {
	Data                 *Source  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSourceRequest) Reset()         { *m = UpdateSourceRequest{} }
func (m *UpdateSourceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSourceRequest) ProtoMessage()    {}
func (*UpdateSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{6}
}

func (m *UpdateSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSourceRequest.Unmarshal(m, b)
}
func (m *UpdateSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSourceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSourceRequest.Merge(m, src)
}
func (m *UpdateSourceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSourceRequest.Size(m)
}
func (m *UpdateSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSourceRequest proto.InternalMessageInfo

func (m *UpdateSourceRequest) GetData() *Source {
	if m != nil {
		return m.Data
	}
	return nil
}

// UpdateSourceResponse
// return NOT_FOUND if failed
type UpdateSourceResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSourceResponse) Reset()         { *m = UpdateSourceResponse{} }
func (m *UpdateSourceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSourceResponse) ProtoMessage()    {}
func (*UpdateSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{7}
}

func (m *UpdateSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSourceResponse.Unmarshal(m, b)
}
func (m *UpdateSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSourceResponse.Marshal(b, m, deterministic)
}
func (m *UpdateSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSourceResponse.Merge(m, src)
}
func (m *UpdateSourceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSourceResponse.Size(m)
}
func (m *UpdateSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSourceResponse proto.InternalMessageInfo

func (m *UpdateSourceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// DeleteSourceRequest
// receive unique, delete object by unique
type DeleteSourceRequest struct {
	Unique               string   `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSourceRequest) Reset()         { *m = DeleteSourceRequest{} }
func (m *DeleteSourceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSourceRequest) ProtoMessage()    {}
func (*DeleteSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{8}
}

func (m *DeleteSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSourceRequest.Unmarshal(m, b)
}
func (m *DeleteSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSourceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSourceRequest.Merge(m, src)
}
func (m *DeleteSourceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSourceRequest.Size(m)
}
func (m *DeleteSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSourceRequest proto.InternalMessageInfo

func (m *DeleteSourceRequest) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

// DeleteSourceResponse
// return NOT_FOUND if failed
type DeleteSourceResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSourceResponse) Reset()         { *m = DeleteSourceResponse{} }
func (m *DeleteSourceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSourceResponse) ProtoMessage()    {}
func (*DeleteSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{9}
}

func (m *DeleteSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSourceResponse.Unmarshal(m, b)
}
func (m *DeleteSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSourceResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSourceResponse.Merge(m, src)
}
func (m *DeleteSourceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSourceResponse.Size(m)
}
func (m *DeleteSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSourceResponse proto.InternalMessageInfo

func (m *DeleteSourceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// ListSourceRequest
// receive filters by widcard
type ListSourceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSourceRequest) Reset()         { *m = ListSourceRequest{} }
func (m *ListSourceRequest) String() string { return proto.CompactTextString(m) }
func (*ListSourceRequest) ProtoMessage()    {}
func (*ListSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{10}
}

func (m *ListSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSourceRequest.Unmarshal(m, b)
}
func (m *ListSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSourceRequest.Marshal(b, m, deterministic)
}
func (m *ListSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSourceRequest.Merge(m, src)
}
func (m *ListSourceRequest) XXX_Size() int {
	return xxx_messageInfo_ListSourceRequest.Size(m)
}
func (m *ListSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSourceRequest proto.InternalMessageInfo

// ListSourceResponse
// retrive charts list
type ListSourceResponse struct {
	Data                 *Sources `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSourceResponse) Reset()         { *m = ListSourceResponse{} }
func (m *ListSourceResponse) String() string { return proto.CompactTextString(m) }
func (*ListSourceResponse) ProtoMessage()    {}
func (*ListSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{11}
}

func (m *ListSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSourceResponse.Unmarshal(m, b)
}
func (m *ListSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSourceResponse.Marshal(b, m, deterministic)
}
func (m *ListSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSourceResponse.Merge(m, src)
}
func (m *ListSourceResponse) XXX_Size() int {
	return xxx_messageInfo_ListSourceResponse.Size(m)
}
func (m *ListSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSourceResponse proto.InternalMessageInfo

func (m *ListSourceResponse) GetData() *Sources {
	if m != nil {
		return m.Data
	}
	return nil
}

// Charts list
type Charts struct {
	// Charts list
	// @inject_tag: bson:"charts" json:"charts"
	Charts               []*Chart `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts" bson:"charts"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Charts) Reset()         { *m = Charts{} }
func (m *Charts) String() string { return proto.CompactTextString(m) }
func (*Charts) ProtoMessage()    {}
func (*Charts) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{12}
}

func (m *Charts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Charts.Unmarshal(m, b)
}
func (m *Charts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Charts.Marshal(b, m, deterministic)
}
func (m *Charts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Charts.Merge(m, src)
}
func (m *Charts) XXX_Size() int {
	return xxx_messageInfo_Charts.Size(m)
}
func (m *Charts) XXX_DiscardUnknown() {
	xxx_messageInfo_Charts.DiscardUnknown(m)
}

var xxx_messageInfo_Charts proto.InternalMessageInfo

func (m *Charts) GetCharts() []*Chart {
	if m != nil {
		return m.Charts
	}
	return nil
}

// Chart struct for service
type Chart struct {
	// unique ID gen by client
	// @inject_tag: bson:"unique" json:"unique"
	Unique string `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique" bson:"unique"`
	// Source of data
	// @inject_tag: bson:"source" json:"source"
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source" bson:"source"`
	// Name of data
	// @inject_tag: bson:"title" json:"title"
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title" bson:"title"`
	// Type of chart
	// @inject_tag: bson:"type" json:"type"
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type" bson:"type"`
	// Type of chart
	// @inject_tag: bson:"series" json:"series"
	Series []*Serie `protobuf:"bytes,5,rep,name=series,proto3" json:"series" bson:"series"`
	// Chart periods
	// @inject_tag: bson:"periods" json:"periods"
	Periods []string `protobuf:"bytes,6,rep,name=periods,proto3" json:"periods" bson:"periods"`
	// Query aggregation
	// @inject_tag: bson:"query" json:"query"
	Query string `protobuf:"bytes,7,opt,name=query,proto3" json:"query" bson:"query"`
	// Invertval update in minutes
	// @inject_tag: bson:"interval" json:"interval"
	Interval string `protobuf:"bytes,8,opt,name=interval,proto3" json:"interval" bson:"interval"`
	// Created
	// @inject_tag: bson:"created" json:"created"
	Created string `protobuf:"bytes,9,opt,name=created,proto3" json:"created" bson:"created"`
	// Modified
	// @inject_tag: bson:"modified" json:"modified"
	Modified string `protobuf:"bytes,10,opt,name=modified,proto3" json:"modified" bson:"modified"`
	// Version
	// @inject_tag: bson:"version" json:"version"
	Version int64 `protobuf:"varint,11,opt,name=version,proto3" json:"version" bson:"version"`
	// Versions
	// @inject_tag: bson:"versions" json:"versions"
	Versions             string   `protobuf:"bytes,12,opt,name=versions,proto3" json:"versions" bson:"versions"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chart) Reset()         { *m = Chart{} }
func (m *Chart) String() string { return proto.CompactTextString(m) }
func (*Chart) ProtoMessage()    {}
func (*Chart) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{13}
}

func (m *Chart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart.Unmarshal(m, b)
}
func (m *Chart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart.Marshal(b, m, deterministic)
}
func (m *Chart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart.Merge(m, src)
}
func (m *Chart) XXX_Size() int {
	return xxx_messageInfo_Chart.Size(m)
}
func (m *Chart) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart.DiscardUnknown(m)
}

var xxx_messageInfo_Chart proto.InternalMessageInfo

func (m *Chart) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

func (m *Chart) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Chart) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Chart) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Chart) GetSeries() []*Serie {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *Chart) GetPeriods() []string {
	if m != nil {
		return m.Periods
	}
	return nil
}

func (m *Chart) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *Chart) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *Chart) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Chart) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Chart) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Chart) GetVersions() string {
	if m != nil {
		return m.Versions
	}
	return ""
}

// Serie data
type Serie struct {
	// Serie name
	// @inject_tag: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bson:"name"`
	// Serie values
	// @inject_tag: bson:"data" json:"data"
	Values               []int64  `protobuf:"varint,2,rep,packed,name=values,proto3" json:"data" bson:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Serie) Reset()         { *m = Serie{} }
func (m *Serie) String() string { return proto.CompactTextString(m) }
func (*Serie) ProtoMessage()    {}
func (*Serie) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{14}
}

func (m *Serie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Serie.Unmarshal(m, b)
}
func (m *Serie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Serie.Marshal(b, m, deterministic)
}
func (m *Serie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Serie.Merge(m, src)
}
func (m *Serie) XXX_Size() int {
	return xxx_messageInfo_Serie.Size(m)
}
func (m *Serie) XXX_DiscardUnknown() {
	xxx_messageInfo_Serie.DiscardUnknown(m)
}

var xxx_messageInfo_Serie proto.InternalMessageInfo

func (m *Serie) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Serie) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

// CreateChartRequest
// receive data from client
type CreateChartRequest struct {
	Data                 *Chart   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateChartRequest) Reset()         { *m = CreateChartRequest{} }
func (m *CreateChartRequest) String() string { return proto.CompactTextString(m) }
func (*CreateChartRequest) ProtoMessage()    {}
func (*CreateChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{15}
}

func (m *CreateChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateChartRequest.Unmarshal(m, b)
}
func (m *CreateChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateChartRequest.Marshal(b, m, deterministic)
}
func (m *CreateChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChartRequest.Merge(m, src)
}
func (m *CreateChartRequest) XXX_Size() int {
	return xxx_messageInfo_CreateChartRequest.Size(m)
}
func (m *CreateChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChartRequest proto.InternalMessageInfo

func (m *CreateChartRequest) GetData() *Chart {
	if m != nil {
		return m.Data
	}
	return nil
}

// CreateChartResponse
// return ID for new created data
type CreateChartResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateChartResponse) Reset()         { *m = CreateChartResponse{} }
func (m *CreateChartResponse) String() string { return proto.CompactTextString(m) }
func (*CreateChartResponse) ProtoMessage()    {}
func (*CreateChartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{16}
}

func (m *CreateChartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateChartResponse.Unmarshal(m, b)
}
func (m *CreateChartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateChartResponse.Marshal(b, m, deterministic)
}
func (m *CreateChartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChartResponse.Merge(m, src)
}
func (m *CreateChartResponse) XXX_Size() int {
	return xxx_messageInfo_CreateChartResponse.Size(m)
}
func (m *CreateChartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChartResponse proto.InternalMessageInfo

func (m *CreateChartResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// ReadChartRequest
// receive unique in GET request
type ReadChartRequest struct {
	Unique               string   `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadChartRequest) Reset()         { *m = ReadChartRequest{} }
func (m *ReadChartRequest) String() string { return proto.CompactTextString(m) }
func (*ReadChartRequest) ProtoMessage()    {}
func (*ReadChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{17}
}

func (m *ReadChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadChartRequest.Unmarshal(m, b)
}
func (m *ReadChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadChartRequest.Marshal(b, m, deterministic)
}
func (m *ReadChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadChartRequest.Merge(m, src)
}
func (m *ReadChartRequest) XXX_Size() int {
	return xxx_messageInfo_ReadChartRequest.Size(m)
}
func (m *ReadChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadChartRequest proto.InternalMessageInfo

func (m *ReadChartRequest) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

// ReadChartResponse
// retrive data by unique
// return NOT_FOUND if failed
type ReadChartResponse struct {
	Data                 *Chart   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadChartResponse) Reset()         { *m = ReadChartResponse{} }
func (m *ReadChartResponse) String() string { return proto.CompactTextString(m) }
func (*ReadChartResponse) ProtoMessage()    {}
func (*ReadChartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{18}
}

func (m *ReadChartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadChartResponse.Unmarshal(m, b)
}
func (m *ReadChartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadChartResponse.Marshal(b, m, deterministic)
}
func (m *ReadChartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadChartResponse.Merge(m, src)
}
func (m *ReadChartResponse) XXX_Size() int {
	return xxx_messageInfo_ReadChartResponse.Size(m)
}
func (m *ReadChartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadChartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadChartResponse proto.InternalMessageInfo

func (m *ReadChartResponse) GetData() *Chart {
	if m != nil {
		return m.Data
	}
	return nil
}

// UpdateChartRequest
// receive data with Unique to update certain object
type UpdateChartRequest struct {
	Data                 *Chart   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChartRequest) Reset()         { *m = UpdateChartRequest{} }
func (m *UpdateChartRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateChartRequest) ProtoMessage()    {}
func (*UpdateChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{19}
}

func (m *UpdateChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChartRequest.Unmarshal(m, b)
}
func (m *UpdateChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChartRequest.Marshal(b, m, deterministic)
}
func (m *UpdateChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChartRequest.Merge(m, src)
}
func (m *UpdateChartRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateChartRequest.Size(m)
}
func (m *UpdateChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChartRequest proto.InternalMessageInfo

func (m *UpdateChartRequest) GetData() *Chart {
	if m != nil {
		return m.Data
	}
	return nil
}

// UpdateChartResponse
// return NOT_FOUND if failed
type UpdateChartResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateChartResponse) Reset()         { *m = UpdateChartResponse{} }
func (m *UpdateChartResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateChartResponse) ProtoMessage()    {}
func (*UpdateChartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{20}
}

func (m *UpdateChartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChartResponse.Unmarshal(m, b)
}
func (m *UpdateChartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChartResponse.Marshal(b, m, deterministic)
}
func (m *UpdateChartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChartResponse.Merge(m, src)
}
func (m *UpdateChartResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateChartResponse.Size(m)
}
func (m *UpdateChartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChartResponse proto.InternalMessageInfo

func (m *UpdateChartResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// DeleteChartRequest
// receive unique, delete object by unique
type DeleteChartRequest struct {
	Unique               string   `protobuf:"bytes,1,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChartRequest) Reset()         { *m = DeleteChartRequest{} }
func (m *DeleteChartRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteChartRequest) ProtoMessage()    {}
func (*DeleteChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{21}
}

func (m *DeleteChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartRequest.Unmarshal(m, b)
}
func (m *DeleteChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartRequest.Marshal(b, m, deterministic)
}
func (m *DeleteChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartRequest.Merge(m, src)
}
func (m *DeleteChartRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteChartRequest.Size(m)
}
func (m *DeleteChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartRequest proto.InternalMessageInfo

func (m *DeleteChartRequest) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

// DeleteChartResponse
// return NOT_FOUND if failed
type DeleteChartResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChartResponse) Reset()         { *m = DeleteChartResponse{} }
func (m *DeleteChartResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteChartResponse) ProtoMessage()    {}
func (*DeleteChartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{22}
}

func (m *DeleteChartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartResponse.Unmarshal(m, b)
}
func (m *DeleteChartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartResponse.Marshal(b, m, deterministic)
}
func (m *DeleteChartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartResponse.Merge(m, src)
}
func (m *DeleteChartResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteChartResponse.Size(m)
}
func (m *DeleteChartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartResponse proto.InternalMessageInfo

func (m *DeleteChartResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// ListChartRequest
// receive filters by widcard
type ListChartRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChartRequest) Reset()         { *m = ListChartRequest{} }
func (m *ListChartRequest) String() string { return proto.CompactTextString(m) }
func (*ListChartRequest) ProtoMessage()    {}
func (*ListChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{23}
}

func (m *ListChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartRequest.Unmarshal(m, b)
}
func (m *ListChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartRequest.Marshal(b, m, deterministic)
}
func (m *ListChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartRequest.Merge(m, src)
}
func (m *ListChartRequest) XXX_Size() int {
	return xxx_messageInfo_ListChartRequest.Size(m)
}
func (m *ListChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartRequest proto.InternalMessageInfo

// ListChartResponse
// retrive charts list
type ListChartResponse struct {
	Data                 *Charts  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChartResponse) Reset()         { *m = ListChartResponse{} }
func (m *ListChartResponse) String() string { return proto.CompactTextString(m) }
func (*ListChartResponse) ProtoMessage()    {}
func (*ListChartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2b6c44db8db459e, []int{24}
}

func (m *ListChartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChartResponse.Unmarshal(m, b)
}
func (m *ListChartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChartResponse.Marshal(b, m, deterministic)
}
func (m *ListChartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChartResponse.Merge(m, src)
}
func (m *ListChartResponse) XXX_Size() int {
	return xxx_messageInfo_ListChartResponse.Size(m)
}
func (m *ListChartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListChartResponse proto.InternalMessageInfo

func (m *ListChartResponse) GetData() *Charts {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Sources)(nil), "main.Sources")
	proto.RegisterType((*Source)(nil), "main.Source")
	proto.RegisterType((*CreateSourceRequest)(nil), "main.CreateSourceRequest")
	proto.RegisterType((*CreateSourceResponse)(nil), "main.CreateSourceResponse")
	proto.RegisterType((*ReadSourceRequest)(nil), "main.ReadSourceRequest")
	proto.RegisterType((*ReadSourceResponse)(nil), "main.ReadSourceResponse")
	proto.RegisterType((*UpdateSourceRequest)(nil), "main.UpdateSourceRequest")
	proto.RegisterType((*UpdateSourceResponse)(nil), "main.UpdateSourceResponse")
	proto.RegisterType((*DeleteSourceRequest)(nil), "main.DeleteSourceRequest")
	proto.RegisterType((*DeleteSourceResponse)(nil), "main.DeleteSourceResponse")
	proto.RegisterType((*ListSourceRequest)(nil), "main.ListSourceRequest")
	proto.RegisterType((*ListSourceResponse)(nil), "main.ListSourceResponse")
	proto.RegisterType((*Charts)(nil), "main.Charts")
	proto.RegisterType((*Chart)(nil), "main.Chart")
	proto.RegisterType((*Serie)(nil), "main.Serie")
	proto.RegisterType((*CreateChartRequest)(nil), "main.CreateChartRequest")
	proto.RegisterType((*CreateChartResponse)(nil), "main.CreateChartResponse")
	proto.RegisterType((*ReadChartRequest)(nil), "main.ReadChartRequest")
	proto.RegisterType((*ReadChartResponse)(nil), "main.ReadChartResponse")
	proto.RegisterType((*UpdateChartRequest)(nil), "main.UpdateChartRequest")
	proto.RegisterType((*UpdateChartResponse)(nil), "main.UpdateChartResponse")
	proto.RegisterType((*DeleteChartRequest)(nil), "main.DeleteChartRequest")
	proto.RegisterType((*DeleteChartResponse)(nil), "main.DeleteChartResponse")
	proto.RegisterType((*ListChartRequest)(nil), "main.ListChartRequest")
	proto.RegisterType((*ListChartResponse)(nil), "main.ListChartResponse")
}

func init() { proto.RegisterFile("chart.proto", fileDescriptor_b2b6c44db8db459e) }

var fileDescriptor_b2b6c44db8db459e = []byte{
	// 916 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0xae, 0xdb, 0x44,
	0x14, 0xd6, 0x4d, 0x6e, 0x9c, 0xe6, 0x38, 0x40, 0x32, 0x09, 0xc9, 0xc4, 0xad, 0xda, 0x74, 0x60,
	0x11, 0x5d, 0x68, 0x22, 0x5a, 0x2e, 0x57, 0x62, 0x49, 0xbb, 0x64, 0x95, 0x0b, 0x52, 0x85, 0xd8,
	0x4c, 0xe2, 0x69, 0xb1, 0xe4, 0x6b, 0xe7, 0x7a, 0xc6, 0x41, 0x15, 0x62, 0xc3, 0x2b, 0xf0, 0x0e,
	0x3c, 0x06, 0x2f, 0xc1, 0x03, 0xb0, 0xe1, 0x41, 0xd0, 0xfc, 0x39, 0x33, 0xb1, 0xa3, 0x14, 0x76,
	0x3e, 0x73, 0xe6, 0x7c, 0xdf, 0xf9, 0x99, 0xef, 0xc8, 0x10, 0x6e, 0x7f, 0xa2, 0x85, 0x58, 0xee,
	0x8a, 0x5c, 0xe4, 0xe8, 0xf2, 0x8e, 0x26, 0x59, 0xf4, 0xe8, 0x6d, 0x9e, 0xbf, 0x4d, 0xd9, 0x8a,
	0xee, 0x92, 0x15, 0xcd, 0xb2, 0x5c, 0x50, 0x91, 0xe4, 0x19, 0xd7, 0x77, 0xa2, 0xa9, 0xe3, 0xdd,
	0xa6, 0x09, 0xcb, 0x4c, 0x30, 0x59, 0x41, 0xf7, 0x36, 0x2f, 0x8b, 0x2d, 0xe3, 0xe8, 0x53, 0x08,
	0xb8, 0xfa, 0xc4, 0x17, 0xf3, 0xf6, 0x22, 0x7c, 0xde, 0x5f, 0x4a, 0xe0, 0xa5, 0x76, 0xaf, 0x8d,
	0x8f, 0xfc, 0xd1, 0x82, 0x40, 0x1f, 0xa1, 0x09, 0x04, 0x65, 0x96, 0xdc, 0x97, 0x32, 0xe0, 0x62,
	0xd1, 0x5b, 0x1b, 0x0b, 0x21, 0xb8, 0xcc, 0xe8, 0x1d, 0xc3, 0x2d, 0x75, 0xaa, 0xbe, 0x11, 0x86,
	0x2e, 0x8d, 0xe3, 0x82, 0x71, 0x8e, 0xdb, 0xea, 0xd8, 0x9a, 0xf2, 0x76, 0xc9, 0x59, 0x81, 0x2f,
	0xf5, 0x6d, 0xf9, 0x8d, 0x22, 0x78, 0xb0, 0xa3, 0x9c, 0xff, 0x9c, 0x17, 0x31, 0xee, 0xa8, 0xf3,
	0xca, 0x96, 0xbe, 0x98, 0x0a, 0xba, 0xa1, 0x9c, 0xe1, 0x40, 0xfb, 0xac, 0x8d, 0x1e, 0x03, 0x6c,
	0xf3, 0x34, 0x65, 0x5b, 0x59, 0x3b, 0xee, 0x2a, 0xaf, 0x73, 0x22, 0xb3, 0xd8, 0x16, 0x8c, 0x0a,
	0x16, 0xe3, 0x07, 0x3a, 0x0b, 0x63, 0x4a, 0xd4, 0xbb, 0x3c, 0x4e, 0xde, 0x24, 0x2c, 0xc6, 0x3d,
	0x8d, 0x6a, 0x6d, 0x19, 0xb5, 0x67, 0x05, 0x97, 0x90, 0x30, 0xbf, 0x58, 0xb4, 0xd7, 0xd6, 0x94,
	0x51, 0xe6, 0x93, 0xe3, 0x50, 0x47, 0x59, 0x9b, 0xdc, 0xc0, 0xe8, 0xa5, 0x02, 0x37, 0x0d, 0x64,
	0xf7, 0x25, 0xe3, 0x02, 0xcd, 0xe1, 0x52, 0xa6, 0xab, 0x5a, 0x76, 0xdc, 0x63, 0xe5, 0x21, 0x4b,
	0x18, 0xfb, 0x81, 0x7c, 0x97, 0x67, 0x5c, 0xb5, 0x9b, 0x0b, 0x2a, 0x4a, 0x6e, 0xdb, 0xad, 0x2d,
	0xf2, 0x19, 0x0c, 0xd7, 0x8c, 0xc6, 0x3e, 0xcd, 0x89, 0xd9, 0x90, 0xaf, 0x00, 0xb9, 0x97, 0x0d,
	0xf4, 0xf9, 0xa4, 0x6e, 0x60, 0xf4, 0xfd, 0x2e, 0xfe, 0x7f, 0xd5, 0xf8, 0x81, 0x67, 0xaa, 0x79,
	0x06, 0xa3, 0x57, 0x2c, 0x65, 0xc7, 0x44, 0xa7, 0xea, 0x59, 0xc2, 0xd8, 0xbf, 0x7e, 0x06, 0x7e,
	0x04, 0xc3, 0x6f, 0x13, 0x2e, 0x3c, 0x70, 0x72, 0x03, 0xc8, 0x3d, 0x34, 0x10, 0x4f, 0xbd, 0xda,
	0x3e, 0x70, 0x6b, 0xe3, 0xa6, 0xb8, 0x67, 0x10, 0xbc, 0x94, 0x4a, 0xe4, 0xe8, 0x13, 0x08, 0x94,
	0x26, 0xb9, 0x11, 0x4f, 0xa8, 0xaf, 0x2b, 0xef, 0xda, 0xb8, 0xc8, 0x9f, 0x2d, 0xe8, 0xa8, 0x93,
	0x93, 0xd2, 0x99, 0x54, 0x1a, 0x6c, 0x99, 0xb4, 0xb5, 0xd4, 0xc6, 0xd0, 0x11, 0x89, 0x48, 0x99,
	0x11, 0x8f, 0x36, 0xa4, 0x74, 0xc4, 0xbb, 0x1d, 0xb3, 0xd2, 0x91, 0xdf, 0x32, 0x11, 0xce, 0x8a,
	0x84, 0x71, 0xdc, 0x71, 0x13, 0xb9, 0x95, 0x67, 0x6b, 0xe3, 0x92, 0x2f, 0x7a, 0xc7, 0x8a, 0x24,
	0x8f, 0x39, 0x0e, 0xe6, 0x6d, 0xa9, 0x03, 0x63, 0x4a, 0xa2, 0xfb, 0x92, 0x15, 0xef, 0x8c, 0x78,
	0xb4, 0x21, 0xdf, 0x79, 0x92, 0x09, 0x56, 0xec, 0x69, 0x6a, 0x84, 0x53, 0xd9, 0xae, 0xa6, 0x7a,
	0xa7, 0x35, 0x05, 0xa7, 0x35, 0x15, 0x9e, 0xd6, 0x54, 0xff, 0x48, 0x53, 0x2f, 0xa0, 0xa3, 0x0a,
	0xa9, 0x56, 0xcc, 0x85, 0xb3, 0x62, 0x26, 0x10, 0xec, 0x69, 0x5a, 0x32, 0x8e, 0x5b, 0xf3, 0xf6,
	0xa2, 0xbd, 0x36, 0x16, 0xb9, 0x06, 0xa4, 0xf5, 0xa4, 0x87, 0x61, 0x1e, 0xd4, 0x13, 0x6f, 0xba,
	0xde, 0xb8, 0xec, 0x6c, 0x47, 0x5e, 0xd8, 0x99, 0x87, 0x75, 0x05, 0x03, 0x29, 0x2c, 0x8f, 0xe3,
	0xd4, 0xa3, 0xfd, 0x52, 0x2b, 0xd6, 0x07, 0x3e, 0x9b, 0xd0, 0x35, 0x20, 0xad, 0xa4, 0xff, 0x5c,
	0x87, 0x17, 0x76, 0xa6, 0x8e, 0xcf, 0x01, 0x69, 0x41, 0xbd, 0x57, 0x25, 0x95, 0x5a, 0xdf, 0x0f,
	0x1c, 0xc1, 0x40, 0x0a, 0xcd, 0x85, 0x26, 0xd7, 0x5a, 0x91, 0x3e, 0x40, 0xe3, 0x5e, 0xd1, 0x52,
	0xd3, 0x65, 0x3d, 0xff, 0xbb, 0x0b, 0xe1, 0x2b, 0x2a, 0xe8, 0x2d, 0x2b, 0xf6, 0xc9, 0x96, 0xa1,
	0x37, 0xd0, 0x77, 0xb7, 0x26, 0x9a, 0x99, 0x98, 0xfa, 0x0a, 0x8e, 0xa2, 0x26, 0x97, 0x26, 0x26,
	0x4f, 0x7e, 0xfb, 0xeb, 0x9f, 0xdf, 0x5b, 0x33, 0x32, 0x5c, 0xed, 0xbf, 0x58, 0x69, 0xf1, 0xad,
	0xf4, 0x7b, 0xfe, 0x5a, 0xf1, 0xa2, 0x1f, 0x01, 0x0e, 0x0b, 0x14, 0x4d, 0x35, 0x54, 0x6d, 0xff,
	0x46, 0xb8, 0xee, 0x30, 0x0c, 0x0f, 0x15, 0xc3, 0xc7, 0x68, 0xe4, 0x30, 0xfc, 0xa2, 0xdb, 0xf9,
	0xab, 0xac, 0xc2, 0xdd, 0x96, 0xb6, 0x8a, 0x86, 0xd5, 0x6b, 0xab, 0x68, 0x5a, 0xae, 0xb6, 0x8a,
	0xc8, 0xad, 0xa2, 0x54, 0x17, 0x4d, 0x15, 0x09, 0xf4, 0xdd, 0xb5, 0x69, 0x79, 0x1a, 0x36, 0xaf,
	0xe5, 0x69, 0xda, 0xb2, 0x84, 0x28, 0x9e, 0x47, 0x57, 0x91, 0xc3, 0x13, 0xab, 0x8b, 0x87, 0x92,
	0x5e, 0x03, 0x1c, 0x96, 0xab, 0x6d, 0x58, 0x6d, 0x07, 0xdb, 0x86, 0xd5, 0xf7, 0x30, 0x99, 0x2a,
	0x92, 0x21, 0xfa, 0xc8, 0x21, 0x49, 0x13, 0x2e, 0xd0, 0x06, 0x42, 0x47, 0xa1, 0x08, 0xbb, 0x63,
	0x75, 0x9f, 0x58, 0x34, 0x6b, 0xf0, 0x18, 0xf0, 0xc7, 0x0a, 0x1c, 0x93, 0x81, 0x04, 0x57, 0x6b,
	0xda, 0x1f, 0xf7, 0x6b, 0xe8, 0x55, 0x52, 0x45, 0x93, 0xc3, 0x50, 0x3d, 0xfc, 0x69, 0xed, 0xdc,
	0xa0, 0x47, 0x0a, 0x7d, 0x8c, 0xd0, 0x01, 0xbd, 0xea, 0xcb, 0x06, 0x42, 0x47, 0x97, 0x36, 0xfb,
	0xba, 0xc2, 0xa3, 0x59, 0x83, 0xc7, 0xcf, 0x3e, 0x72, 0xb2, 0xf7, 0xc6, 0xcc, 0x20, 0x74, 0xe4,
	0x69, 0x39, 0xea, 0xfa, 0x8e, 0x66, 0x0d, 0x1e, 0xc3, 0xf1, 0x54, 0x71, 0x3c, 0xbc, 0x9a, 0x1d,
	0x38, 0x8e, 0x47, 0xfc, 0x1d, 0xf4, 0x2a, 0x09, 0xdb, 0x26, 0x1d, 0xeb, 0x3c, 0x9a, 0xd6, 0xce,
	0x0d, 0xc1, 0x44, 0x11, 0x0c, 0xd0, 0x87, 0x07, 0x02, 0x39, 0xde, 0x6f, 0x82, 0x1f, 0xd4, 0x9f,
	0xed, 0x26, 0x50, 0x7f, 0xaa, 0x2f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x31, 0xa2, 0x98, 0x97,
	0xf5, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataServiceClient is the client API for DataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataServiceClient interface {
	// Create data source
	CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...grpc.CallOption) (*CreateSourceResponse, error)
	// Read data source
	ReadSource(ctx context.Context, in *ReadSourceRequest, opts ...grpc.CallOption) (*ReadSourceResponse, error)
	// Update data source
	UpdateSource(ctx context.Context, in *UpdateSourceRequest, opts ...grpc.CallOption) (*UpdateSourceResponse, error)
	// Delete data source
	DeleteSource(ctx context.Context, in *DeleteSourceRequest, opts ...grpc.CallOption) (*DeleteSourceResponse, error)
	// List data sources
	ListSource(ctx context.Context, in *ListSourceRequest, opts ...grpc.CallOption) (*ListSourceResponse, error)
	// Create chart
	CreateChart(ctx context.Context, in *CreateChartRequest, opts ...grpc.CallOption) (*CreateChartResponse, error)
	// Read chart
	ReadChart(ctx context.Context, in *ReadChartRequest, opts ...grpc.CallOption) (*ReadChartResponse, error)
	// Update chart
	UpdateChart(ctx context.Context, in *UpdateChartRequest, opts ...grpc.CallOption) (*UpdateChartResponse, error)
	// Delete chart
	DeleteChart(ctx context.Context, in *DeleteChartRequest, opts ...grpc.CallOption) (*DeleteChartResponse, error)
	// List charts
	ListChart(ctx context.Context, in *ListChartRequest, opts ...grpc.CallOption) (*ListChartResponse, error)
}

type dataServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataServiceClient(cc *grpc.ClientConn) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...grpc.CallOption) (*CreateSourceResponse, error) {
	out := new(CreateSourceResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/CreateSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ReadSource(ctx context.Context, in *ReadSourceRequest, opts ...grpc.CallOption) (*ReadSourceResponse, error) {
	out := new(ReadSourceResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/ReadSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UpdateSource(ctx context.Context, in *UpdateSourceRequest, opts ...grpc.CallOption) (*UpdateSourceResponse, error) {
	out := new(UpdateSourceResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/UpdateSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) DeleteSource(ctx context.Context, in *DeleteSourceRequest, opts ...grpc.CallOption) (*DeleteSourceResponse, error) {
	out := new(DeleteSourceResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/DeleteSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ListSource(ctx context.Context, in *ListSourceRequest, opts ...grpc.CallOption) (*ListSourceResponse, error) {
	out := new(ListSourceResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/ListSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) CreateChart(ctx context.Context, in *CreateChartRequest, opts ...grpc.CallOption) (*CreateChartResponse, error) {
	out := new(CreateChartResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/CreateChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ReadChart(ctx context.Context, in *ReadChartRequest, opts ...grpc.CallOption) (*ReadChartResponse, error) {
	out := new(ReadChartResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/ReadChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) UpdateChart(ctx context.Context, in *UpdateChartRequest, opts ...grpc.CallOption) (*UpdateChartResponse, error) {
	out := new(UpdateChartResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/UpdateChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) DeleteChart(ctx context.Context, in *DeleteChartRequest, opts ...grpc.CallOption) (*DeleteChartResponse, error) {
	out := new(DeleteChartResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/DeleteChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataServiceClient) ListChart(ctx context.Context, in *ListChartRequest, opts ...grpc.CallOption) (*ListChartResponse, error) {
	out := new(ListChartResponse)
	err := c.cc.Invoke(ctx, "/main.DataService/ListChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServiceServer is the server API for DataService service.
type DataServiceServer interface {
	// Create data source
	CreateSource(context.Context, *CreateSourceRequest) (*CreateSourceResponse, error)
	// Read data source
	ReadSource(context.Context, *ReadSourceRequest) (*ReadSourceResponse, error)
	// Update data source
	UpdateSource(context.Context, *UpdateSourceRequest) (*UpdateSourceResponse, error)
	// Delete data source
	DeleteSource(context.Context, *DeleteSourceRequest) (*DeleteSourceResponse, error)
	// List data sources
	ListSource(context.Context, *ListSourceRequest) (*ListSourceResponse, error)
	// Create chart
	CreateChart(context.Context, *CreateChartRequest) (*CreateChartResponse, error)
	// Read chart
	ReadChart(context.Context, *ReadChartRequest) (*ReadChartResponse, error)
	// Update chart
	UpdateChart(context.Context, *UpdateChartRequest) (*UpdateChartResponse, error)
	// Delete chart
	DeleteChart(context.Context, *DeleteChartRequest) (*DeleteChartResponse, error)
	// List charts
	ListChart(context.Context, *ListChartRequest) (*ListChartResponse, error)
}

// UnimplementedDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataServiceServer struct {
}

func (*UnimplementedDataServiceServer) CreateSource(ctx context.Context, req *CreateSourceRequest) (*CreateSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSource not implemented")
}
func (*UnimplementedDataServiceServer) ReadSource(ctx context.Context, req *ReadSourceRequest) (*ReadSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadSource not implemented")
}
func (*UnimplementedDataServiceServer) UpdateSource(ctx context.Context, req *UpdateSourceRequest) (*UpdateSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSource not implemented")
}
func (*UnimplementedDataServiceServer) DeleteSource(ctx context.Context, req *DeleteSourceRequest) (*DeleteSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSource not implemented")
}
func (*UnimplementedDataServiceServer) ListSource(ctx context.Context, req *ListSourceRequest) (*ListSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSource not implemented")
}
func (*UnimplementedDataServiceServer) CreateChart(ctx context.Context, req *CreateChartRequest) (*CreateChartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChart not implemented")
}
func (*UnimplementedDataServiceServer) ReadChart(ctx context.Context, req *ReadChartRequest) (*ReadChartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadChart not implemented")
}
func (*UnimplementedDataServiceServer) UpdateChart(ctx context.Context, req *UpdateChartRequest) (*UpdateChartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChart not implemented")
}
func (*UnimplementedDataServiceServer) DeleteChart(ctx context.Context, req *DeleteChartRequest) (*DeleteChartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChart not implemented")
}
func (*UnimplementedDataServiceServer) ListChart(ctx context.Context, req *ListChartRequest) (*ListChartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChart not implemented")
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_CreateSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).CreateSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/CreateSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).CreateSource(ctx, req.(*CreateSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ReadSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ReadSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/ReadSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ReadSource(ctx, req.(*ReadSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UpdateSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UpdateSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/UpdateSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UpdateSource(ctx, req.(*UpdateSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_DeleteSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).DeleteSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/DeleteSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).DeleteSource(ctx, req.(*DeleteSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ListSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ListSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/ListSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ListSource(ctx, req.(*ListSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_CreateChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).CreateChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/CreateChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).CreateChart(ctx, req.(*CreateChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ReadChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ReadChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/ReadChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ReadChart(ctx, req.(*ReadChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_UpdateChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).UpdateChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/UpdateChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).UpdateChart(ctx, req.(*UpdateChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_DeleteChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).DeleteChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/DeleteChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).DeleteChart(ctx, req.(*DeleteChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataService_ListChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).ListChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.DataService/ListChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).ListChart(ctx, req.(*ListChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSource",
			Handler:    _DataService_CreateSource_Handler,
		},
		{
			MethodName: "ReadSource",
			Handler:    _DataService_ReadSource_Handler,
		},
		{
			MethodName: "UpdateSource",
			Handler:    _DataService_UpdateSource_Handler,
		},
		{
			MethodName: "DeleteSource",
			Handler:    _DataService_DeleteSource_Handler,
		},
		{
			MethodName: "ListSource",
			Handler:    _DataService_ListSource_Handler,
		},
		{
			MethodName: "CreateChart",
			Handler:    _DataService_CreateChart_Handler,
		},
		{
			MethodName: "ReadChart",
			Handler:    _DataService_ReadChart_Handler,
		},
		{
			MethodName: "UpdateChart",
			Handler:    _DataService_UpdateChart_Handler,
		},
		{
			MethodName: "DeleteChart",
			Handler:    _DataService_DeleteChart_Handler,
		},
		{
			MethodName: "ListChart",
			Handler:    _DataService_ListChart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chart.proto",
}
